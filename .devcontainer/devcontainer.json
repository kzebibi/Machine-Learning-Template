// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/codespaces-linux
{
	"name": "Python 3.11 with ML Extensions",

	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": {
			// Update 'VARIANT' to pick a Python version: 3, 3.11, 3.10, 3.9, 3.8, 3.7, 3.6
			// Append -bullseye or -buster to pin to an OS version.
			// Use -bullseye variants on local on arm64/Apple Silicon.
			"VARIANT": "3.11-bullseye",
			// Options
			"NODE_VERSION": "none"
		}
	},

	"features": {
		"ghcr.io/devcontainers/features/nvidia-cuda:1": {
			"installCudnn": true
		},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {},
		"azure-cli": "latest"
	},

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.defaultInterpreterPath": "/home/vscode/venv/bin/python",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.formatting.autopep8Path": "/home/vscode/venv/bin/autopep8",
				"python.formatting.blackPath": "/home/vscode/venv/bin/black",
				"python.formatting.yapfPath": "/home/vscode/venv/bin/yapf",
				"python.linting.banditPath": "/home/vscode/venv/bin/bandit",
				"python.linting.flake8Path": "/home/vscode/venv/bin/flake8",
				"python.linting.mypyPath": "/home/vscode/venv/bin/mypy",
				"python.linting.pycodestylePath": "/home/vscode/venv/bin/pycodestyle",
				"python.linting.pydocstylePath": "/home/vscode/venv/bin/pydocstyle",
				"python.linting.pylintPath": "/home/vscode/venv/bin/pylint",
				"lldb.executable": "/usr/bin/lldb",
				"files.watcherExclude": {
					"**/target/**": true
				}
			},

			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-toolsai.jupyter",
				"ms-toolsai.jupyter-keymap",
				"ms-toolsai.jupyter-renderers",
				"ms-toolsai.vscode-jupyter-cell-tags",
				"ms-toolsai.vscode-jupyter-slideshow",
				"ms-toolsai.datascience-linter",
				"visualstudioexptteam.vscodeintellicode",
				"github.copilot",
				"github.copilot-chat",
				"github.vscode-pull-request-github",
				"ms-azuretools.vscode-docker",
				"ms-vscode.makefile-tools",
				"ms-vscode.cpptools",
				"ms-vscode.cmake-tools",
				"nvidia.nsight-vscode-edition",
				"ms-python.black-formatter",
				"ms-python.flake8",
				"ms-python.isort",
				"donjayamanne.python-environment-manager",
				"kevinrose.vsc-python-indent",
				"njpwerner.autodocstring",
				"mechatroner.rainbow-csv",
				"grapecity.gc-excelviewer",
				"mhutchie.git-graph",
				"eamodio.gitlens",
				"oderwat.indent-rainbow",
				"shardulm94.trailing-spaces",
				"vscode-icons-team.vscode-icons",
				"streetsidesoftware.code-spell-checker",
				"yzhang.markdown-all-in-one",
				"bierner.markdown-mermaid",
				"davidanson.vscode-markdownlint",
				"ms-vscode-remote.remote-containers",
				"ms-vscode-remote.remote-ssh",
				"ms-vsliveshare.vsliveshare"
			  ]
		}
	},

	"remoteUser": "vscode",

	"overrideCommand": false,

	"mounts": ["source=codespaces-linux-var-lib-docker,target=/var/lib/docker,type=volume"],

	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		"--privileged",
		"--init",
		//"--gpus", "all"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// "oryx build" will automatically install your dependencies and attempt to build your project
	//"postCreateCommand": "oryx build -p virtualenv_name=.venv --log-file /tmp/oryx-build.log --manifest-dir /tmp || echo 'Could not auto-build. Skipping.'"
	// "postCreateCommand": "bash setup.sh"
}